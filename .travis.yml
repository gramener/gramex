# Config file for automatic testing at travis-ci.org

# Run in Python 3 only. Drop Python 2 testing
language: python
python: '3.7'

# Python 3.7 works only in Xenial with sudo
# https://github.com/travis-ci/travis-ci/issues/9069#issuecomment-425720905
dist: xenial
sudo: yes

env:
  global:
    # Twitter secrets
    # Read more here: https://docs.travis-ci.com/user/encryption-keys/
    secure: "AYbYrYxTuo32bBueO4AzwEeRcM7M4UuoDgYBulNtcbtg3yDWwQi+fFq/uCKELJOmGsl+X1s8rpGpojW5AsYj3mkJF4TKVL/QEmfvAiNTqj4uHO6aWeGGLAikCZEiBVLS+krOF5fjz2rhMOHoaGJUeb1zSC/WfDmt8um0ipF8ZOXwNtTHQGgZ0wLSCoVLXAG32hVBD4ZVO64ThYFyXts8D301JcgGL4LTSKKBUn6EGThlLL6xnluv9rG/iFFalGVnrQYhgHdhUTweyrKtgS+V9/8f65dJmV6kVpgPuewlaB/WDfOHvGpVWa3Rvjw6pBZtDFYJxoGgDWax6nWymgVEEjD0HwFkaqA5wY0NYEvpmLv8drAFS2Yp/If+7HsM9G3xGUITKrmQgt5nML3wBLOH4iczq701r1FZaIETRgQQdaV2QOnf+1SySkndPjMLzK73C+rf+Ekb63m6FqZQF9wMw9tCVGkMHBQ9+HiiP3DaDNY8l1Oypx97CncpYkStba6RJygSkaYTCBT8d62XdMJ20nDWrONMTHC0A5rPU+AwKOu/GOjUGxtzhQihXff7smh9dFAVckstHBjNTLhV1PKA4L5h5Rz2tOSiarNFTwFwOi/8GsN2ZLCwFWvVsXjDT9XrKxGUOzAo8M7PkozhK4RumnnlPq3lAJX2sxeRa6UPVPo="
services:
  - mysql
  - postgresql

addons:
  apt:
    packages:
      - pandoc

# Cache modules for faster builds
cache:
  timeout: 1000
  pip: true
  npm: true
  yarn: true
  # Don't cache miniconda directory. It's slower. Fresh install takes ~200s.
  # But caching takes ~150s (extraction) + ~190s (re-packing) = ~340s (slower).
  # directories:
  #   - $HOME/miniconda

install:
  # Install miniconda
  - wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O $HOME/miniconda.sh
  - bash $HOME/miniconda.sh -b -u -p $HOME/miniconda
  # Add conda to path. "hash -r" rescans the $PATH
  - export PATH="$HOME/miniconda/bin:$PATH"
  - hash -r
  # Install conda packages
  - conda config --set always_yes yes --set changeps1 no
  - conda install -y -q colorama h5py lxml matplotlib pandas pytest seaborn sqlalchemy line_profiler tzlocal scikit-learn
  # rpy2 v2.9.6 is compatible with pandas 1.0, not available on the default channel
  - conda install -c conda-forge rpy2
  # Install pip modules
  - pip install flake8 pep8-naming flake8-gramex flake8-blind-except flake8-print flake8-debugger bandit nose nose-timer
  # Install node.js and packages using yarn (faster than npm)
  - nvm install 12
  - npm install -g yarn
  - yarn global add eclint eslint htmllint-cli
  # Set up variables
  - export BRANCH=$TRAVIS_BRANCH

script:
  - eclint check '**/*.html' '**/*.js' '**/*.css' '**/*.yaml' '**/*.md'
  # eslint requires eslint-plugin-* which are in package.json. yarn install them first
  - yarn install
  - eslint --ext js,html gramex/apps
  # htmllint: ignore test coverage, node_modules, Sphinx doc _builds
  - find . -name '*.html' | grep -v htmlcov | grep -v node_modules | grep -v _build | xargs htmllint
  # Run Python flake8 and bandit security checks
  - flake8
  - bandit gramex --recursive --format csv || true    # Just run bandit as a warning

  # Install Gramex and accept the license
  - pip install -e .
  - pip install gramexenterprise
  - gramex license accept
  - gramex setup --all  # ensure node-sass, puppetter exists
  - python setup.py nosetests

  # Test specific apps
  - cd $TRAVIS_BUILD_DIR/gramex/apps/filemanager/ && yarn install && yarn test

  # TODO: Incorporate later
  # - gramex --listen.port=1234 > gramex.log 2>&1 &
  # - sleep 10
  # - pytest tests/gramextest.yaml
  # - cat gramex.log
  # - kill %1
